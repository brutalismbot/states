---
StartAt: Parallelize
States:
  Parallelize:
    Type: Parallel
    Next: GetEvents
    ResultSelector:
      MAX_CREATED_UTC.$: $[0]
      POST.$: $[1]
    Branches:
      - StartAt: GetMaxCreatedUTC
        States:
          GetMaxCreatedUTC:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:getItem
            End: true
            OutputPath: $.Item.CREATED_UTC.S
            Parameters:
              TableName: ${table_name}
              ProjectionExpression: CREATED_UTC
              Key:
                GUID:
                  S: STATS/MAX
                SORT:
                  S: REDDIT/POST
      - StartAt: PutItem
        States:
          PutItem:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:putItem
            End: true
            InputPath: $.POST
            ResultPath: $.DYNAMODB
            OutputPath: $.POST
            Parameters:
              TableName: ${table_name}
              Item:
                SORT:
                  S: REDDIT/POST
                GUID:
                  S.$: $.NAME
                CREATED_UTC:
                  S.$: $.CREATED_UTC
                JSON:
                  S.$: $.DATA
                NAME:
                  S.$: $.NAME
                PERMALINK:
                  S.$: $.PERMALINK
                TITLE:
                  S.$: $.TITLE
                TTL:
                  N.$: States.JsonToString($.TTL)
  GetEvents:
    Type: Parallel
    Next: PutEvents
    ResultSelector:
      Entries:
        - EventBusName: ${event_bus_name}
          Source: reddit
          DetailType: post/slack
          Detail:
            AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id
            POST.$: $[0]
        - EventBusName: ${event_bus_name}
          Source: reddit
          DetailType: post/twitter
          Detail:
            AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id
            POST.$: $[1]
    Branches:
      - StartAt: GetSlack
        States:
          GetSlack:
            Type: Task
            Resource: ${slack_transform_function_arn}
            Next: SendVerify
            InputPath: $.POST.DATA
            ResultPath: $.POST.DATA
            OutputPath: $.POST
            Retry:
              - BackoffRate: 2
                IntervalSeconds: 3
                MaxAttempts: 4
                ErrorEquals:
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.ServiceException
                  - Lambda.Unknown
          SendVerify:
            Type: Task
            Resource: arn:aws:states:::events:putEvents
            Next: Wait
            ResultPath: $.VALIDATION
            Parameters:
              Entries:
                - EventBusName: ${event_bus_name}
                  Source: reddit
                  DetailType: post/slack/screen
                  Detail:
                    AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id
                    POST.$: $
          Wait:
            Type: Wait
            Seconds: ${timeout_seconds}
            End: true
      - StartAt: GetTwitter
        States:
          GetTwitter:
            Type: Task
            Resource: ${twitter_transform_function_arn}
            End: true
            InputPath: $.POST.DATA
            ResultPath: $.POST.DATA
            OutputPath: $.POST
            Retry:
              - BackoffRate: 2
                IntervalSeconds: 3
                MaxAttempts: 4
                ErrorEquals:
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.ServiceException
                  - Lambda.Unknown
      - StartAt: NewMaxCreatedUTC?
        States:
          NewMaxCreatedUTC?:
            Type: Choice
            Default: Finish
            Choices:
              - Next: UpdateMaxCreatedUTC
                Variable: $.MAX_CREATED_UTC
                StringLessThanPath: $.POST.CREATED_UTC
          Finish:
            Type: Succeed
          UpdateMaxCreatedUTC:
            Type: Task
            Resource: arn:aws:states:::aws-sdk:dynamodb:updateItem
            End: true
            InputPath: $.POST
            Parameters:
              TableName: ${table_name}
              UpdateExpression: >-
                SET CREATED_UTC = :CREATED_UTC, #NAME = :NAME
              ExpressionAttributeNames:
                "#NAME": NAME
              ExpressionAttributeValues:
                ":CREATED_UTC":
                  S.$: $.CREATED_UTC
                ":NAME":
                  S.$: $.NAME
              Key:
                GUID:
                  S: STATS/MAX
                SORT:
                  S: REDDIT/POST
  PutEvents:
    Type: Task
    Resource: arn:aws:states:::events:putEvents
    End: true
    Parameters:
      Entries.$: $.Entries
